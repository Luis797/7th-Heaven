<Window x:Class="SeventhHeaven.Windows.ConfigureModWindow"
        x:Name="windowConfigureMod"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SeventhHeaven.Windows"
        xmlns:cls="clr-namespace:SeventhHeaven.Classes"
        xmlns:gif="http://wpfanimatedgif.codeplex.com"
        mc:Ignorable="d"
        Style="{StaticResource MainWindowStyle}"
        Title="{Binding WindowTitle, FallbackValue='Configure Mod'}" 
        Closed="Window_Closed"
        Height="400" Width="600"
        ResizeMode="CanResize"
        MinHeight="400" MinWidth="600"
        MaxHeight="800" MaxWidth="1000">
    <Window.Resources>

        <DataTemplate x:Key="optionItem">
            <TextBlock Text="{Binding OptionName, FallbackValue='Option Name'}"/>
        </DataTemplate>


        <DataTemplate x:Key="dropdownItemTemplate">
            <Grid x:Name="gd" DataContext="{Binding ElementName=windowConfigureMod, Path=DataContext}" Background="Transparent">
                <TextBlock Text="{Binding ElementName=gd, Path=DataContext.SelectedDropdownText, FallbackValue='Value Name'}" Margin="0,0,15,0" TextWrapping="Wrap"/>
            </Grid>
        </DataTemplate>
        

        <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MainListBoxItemStyle}">
            <Setter Property="ContentTemplate" Value="{StaticResource optionItem}"/>
        </Style>

        <Style x:Key="dropdownItemStyle" TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource MainComboBoxItemStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="bd" BorderBrush="{DynamicResource SecondaryAppBackground}" BorderThickness="0" Background="{DynamicResource PrimaryControlBackground}">
                            <TextBlock Text="{Binding ValueName, FallbackValue='Value Name'}" Margin="3"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlPressed}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlMouseOver}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MainComboBoxStyle}">
            <Setter Property="ItemTemplate" Value="{StaticResource dropdownItemTemplate}"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource dropdownItemStyle}"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>

        <GroupBox Header=" Options "
                  Grid.RowSpan="5"
                  Margin="5,2,0,5">
            <ListBox x:Name="lstOptions"
                     FontSize="13"
                     ItemsSource="{Binding ModOptions}"
                     SelectedIndex="{Binding SelectedOptionIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Margin="1"/>
        </GroupBox>

        <TextBlock x:Name="txtDescription"
                   Grid.Column="1"
                   Margin="5,10,5,0"
                   TextWrapping="Wrap"
                   Text="{Binding Description, FallbackValue='This is some text about the option.'}"/>

        <CheckBox x:Name="chkOption"
                  Content="{Binding CheckBoxText, FallbackValue='My Checked Option'}"
                  Visibility="{Binding CheckBoxVisibility, FallbackValue='Hidden'}"
                  IsEnabled="{Binding CheckBoxIsEnabled}"
                  IsChecked="{Binding IsOptionChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Grid.Row="1" Grid.Column="1"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Top"
                  Margin="5,10,0,10"/>

        <ComboBox x:Name="dropdownOption"
                  ItemsSource="{Binding DropdownOptions}"
                  SelectedIndex="{Binding DropdownSelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  IsEnabled="{Binding ComboBoxIsEnabled}"
                  Visibility="{Binding ComboBoxVisibility, FallbackValue=''}"
                  Grid.Row="1" Grid.Column="1"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Top"
                  MinWidth="225"
                  Margin="5,10,0,10"/>


        <Image x:Name="imgOption"
               Grid.Row="2"
               Grid.Column="1"
               RenderOptions.BitmapScalingMode="HighQuality"
               gif:ImageBehavior.AnimatedSource="{Binding ImageOptionSource}"
               VerticalAlignment="Stretch"
               Margin="10"/>

        <TextBlock x:Name="txtCompatibility"
                   Grid.Column="1"
                   Grid.Row="3"
                   Margin="5,0,5,0"
                   VerticalAlignment="Top"
                   TextWrapping="Wrap"
                   Text="{Binding CompatibilityNote, FallbackValue='This is some text about compatibility with the mod option.... '}"/>

        <cls:ButtonWithImage x:Name="btnPreview"
                             Grid.Row="4"
                             Grid.Column="1"
                             HorizontalAlignment="Left"
                             VerticalAlignment="Bottom"
                             Margin="5,0,0,5"
                             Visibility="{Binding PreviewButtonVisibility, FallbackValue='Visible'}"
                             TemplateSource="{StaticResource iconPlay}"
                             Click="btnPreview_Click"
                             Content="Preview" />

        <Button x:Name="btnOk"
                Grid.Row="4"
                Grid.Column="1"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Margin="0,0,70,5"
                Click="btnOk_Click"
                Content="OK" />

        <Button x:Name="btnCancel"
                Grid.Row="4"
                Grid.Column="1"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Margin="0,0,5,5"
                Click="btnCancel_Click"
                Content="Cancel" />

    </Grid>
</Window>
