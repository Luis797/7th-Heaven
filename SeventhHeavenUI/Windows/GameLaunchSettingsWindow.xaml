<Window x:Class="SeventhHeaven.Windows.GameLaunchSettingsWindow"
        x:Name="windowSettings"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:cls="clr-namespace:SeventhHeaven.Classes"
        xmlns:local="clr-namespace:SeventhHeaven.Windows"
        mc:Ignorable="d"
        Style="{StaticResource MainWindowStyle}"
        LocationChanged="Window_LocationChanged"
        Deactivated="Window_Deactivated"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        Title="Game Launcher Settings" 
        Width="800"
        Height="515">
    <Window.Resources>

        <DataTemplate x:Key="programItem">
            <TextBlock Text="{Binding DisplayName, FallbackValue='Program Name And Args'}"/>
        </DataTemplate>

        <Style x:Key="programItemStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MainListBoxItemStyle}">
            <Setter Property="ContentTemplate" Value="{StaticResource programItem}"/>
        </Style>


        <DataTemplate x:Key="soundItemTemplate">
            <Grid x:Name="gd" DataContext="{Binding ElementName=windowSettings, Path=DataContext}" Background="Transparent">
                <TextBlock Text="{Binding ElementName=gd, Path=DataContext.SelectedSoundDevice, FallbackValue='Auto-switch (Windows default)'}" Margin="0,0,15,0" TextWrapping="Wrap"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="midiItemTemplate">
            <Grid x:Name="gd" DataContext="{Binding ElementName=windowSettings, Path=DataContext}" Background="Transparent">
                <TextBlock Text="{Binding ElementName=gd, Path=DataContext.SelectedMidiDevice, FallbackValue='General MIDI'}" Margin="0,0,15,0" TextWrapping="Wrap"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="rendererItemTemplate">
            <Grid x:Name="gd" DataContext="{Binding ElementName=windowSettings, Path=DataContext}" Background="Transparent">
                <TextBlock Text="{Binding ElementName=gd, Path=DataContext.SelectedRenderer, FallbackValue='Custom Driver'}" Margin="0,0,15,0" TextWrapping="Wrap"/>
            </Grid>
        </DataTemplate>

        <Style TargetType="CheckBox" BasedOn="{StaticResource ToggleSwitchCheckbox}">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Margin" Value="0,3,0,3"/>
            <Setter Property="ToolTipService.IsEnabled" Value="False"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0"
                    Grid.RowSpan="4">
            
            <GroupBox x:Name="grpOptions"
                      MinWidth="235"
                      Header=" Options " Grid.Row="0" Margin="10,10,0,0" 
                      HorizontalAlignment="Left"
                      VerticalAlignment="Top">
                <StackPanel Margin="3" HorizontalAlignment="Right">
                    <CheckBox Height="25" Content="Auto-Mount Game Disc" 
                              IsChecked="{Binding AutoMountChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              IsEnabled="{Binding IsAutoMountSupported}"
                              MouseEnter="Control_MouseEnter"
                              ToolTip="Auto-mount game disc ISO when starting game. Windows 8 and up only. If on Windows 7 or older, you will need to insert disc or mount ISO manually."/>
                    <CheckBox Height="25" Content="Auto-Dismount Game Disc" 
                              IsChecked="{Binding AutoUnmountChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              MouseEnter="Control_MouseEnter"
                              IsEnabled="{Binding IsAutoMountSupported}"
                              ToolTip="Auto-dismount game disc ISO when game closes. Windows 8 and up only. If on Windows 7 or older, you will need to eject disc or dismount ISO manually."/>
                    <CheckBox Height="25" Content="Auto-Update Disc Path" 
                              IsChecked="{Binding AutoUpdatePathChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              MouseEnter="Control_MouseEnter"
                              ToolTip="Detects if disc has changed drive letters and auto-updates game to point to new location."/>
                    <CheckBox Height="25" Content="Show Game Launcher" 
                              IsChecked="{Binding IsShowLauncherChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              MouseEnter="Control_MouseEnter"
                              ToolTip="Shows the Game Launcher window when starting FF7 for detailed output of the launch process"/>

                    <RadioButton Content="Standard Keyboard" VerticalAlignment="Center" Margin="0,8,11,0"
                                 HorizontalAlignment="Right"
                                 GroupName="KeyboardInput"
                                 IsChecked="{Binding IsStandardKeyboardChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <RadioButton Content="Laptop/No Numpad" VerticalAlignment="Center" Margin="0,3,3,0"
                                 HorizontalAlignment="Right"
                                 GroupName="KeyboardInput"
                                 IsChecked="{Binding IsLaptopKeyboardChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </GroupBox>

            <GroupBox x:Name="grpCompat"
                      Width="{Binding ElementName=grpOptions, Path=ActualWidth}"
                      Header=" Compatibility " Margin="10,10,0,0" 
                      HorizontalAlignment="Left"
                      VerticalAlignment="Top">
                <StackPanel Margin="3" HorizontalAlignment="Right">
                    <CheckBox Height="25" Content="High-DPI Scaling Fix" 
                              IsChecked="{Binding HighDpiFixChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              MouseEnter="Control_MouseEnter"
                              ToolTip="May fix game screen being cut off and/or not being centered. Use with high-DPI displays. Alternatively, change your Windows Display Settings to 100% scaling."/>
                    <CheckBox Height="25" Content="Code 5 Fix" 
                              IsEnabled="{Binding HasCode5Error}"
                              IsChecked="{Binding Code5FixChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              MouseEnter="Control_MouseEnter"
                              ToolTip="May fix problems with 'Code 5' error when clicking 'Play'. Multi-monitor setups may see open programs pushed to the secondary monitor when activated."/>
                    <CheckBox Height="25" Content="Reunion Driver Fix" 
                              IsChecked="{Binding DisableReunionChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              IsEnabled="{Binding IsReunionInstalled}"
                              MouseEnter="Control_MouseEnter"
                              ToolTip="Temporarily renames ddraw.dll to Reunion.dll.bak on game launch, then immediately back again. Does not affect playability of Reunion outside of 7H"/>
                </StackPanel>
            </GroupBox>
        </StackPanel>
        

        <GroupBox x:Name="grpAudio"
                  Grid.Row="0"
                  Grid.Column="1"
                  Header=" Audio Output Device " Margin="10,10,10,0" 
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch">
            <StackPanel>
                <Grid Margin="3,3,3,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Sound Device:"
                               Grid.Row="0"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Center"
                               Margin="0,0,5,10"/>

                    <WrapPanel Grid.Row="0"
                               Grid.Column="1">
                        <ComboBox x:Name="cboSoundDevices"
                                  Style="{StaticResource MainComboBoxStyle}"
                                  ItemContainerStyle="{StaticResource TextComboBoxItemStyle}"
                                  ItemTemplate="{StaticResource soundItemTemplate}"
                                  SelectedItem="{Binding SelectedSoundDevice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  ItemsSource="{Binding SoundDevices}"
                                  Grid.Row="0"
                                  Grid.Column="1"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Margin="0,1,0,10"
                                  MinWidth="250"/>

                        <cls:ButtonWithImage x:Name="btnTestAudio"
                                         Grid.Row="0"
                                         Grid.Column="2"
                                         HorizontalAlignment="Left"
                                         VerticalAlignment="Bottom"
                                         Margin="3,0,2,10"
                                         TemplateSource="{StaticResource iconPlay}"
                                         IsEnabled="{Binding IsAudioNotPlaying}"
                                         Click="btnTestAudio_Click"
                                         Width="60"
                                         Content="Test"/>
                        <ToggleButton x:Name="btnAudioOptions"
                                  Style="{StaticResource DownArrowToggleButton}"
                                  Grid.Row="0"
                                  Grid.Column="2"
                                  VerticalAlignment="Stretch"
                                  Margin="0,0,0,10"
                                  Click="btnAudioOptions_Click"
                                  ContextMenuService.Placement="Bottom">
                            <ToggleButton.ContextMenu>
                                <ContextMenu x:Name="menuAudioTest" Closed="menuAudioTest_Closed">
                                    <MenuItem x:Name="menuItemTestLeft" Header="Test Left Channel" Click="menuItemTestLeft_Click" IsEnabled="{Binding IsAudioNotPlaying}"/>
                                    <MenuItem x:Name="menuItemTestRight" Header="Test Right Channel" Click="menuItemTestRight_Click" IsEnabled="{Binding IsAudioNotPlaying}"/>
                                </ContextMenu>
                            </ToggleButton.ContextMenu>
                        </ToggleButton>
                    </WrapPanel>

                    <TextBlock Text="MIDI Device:"
                               Grid.Row="1"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Center"
                               Margin="0,0,5,10"/>
                    <ComboBox x:Name="cboMidiDevices"
                              Grid.Row="1"
                              Grid.Column="1"
                              Style="{StaticResource MainComboBoxStyle}"
                              ItemTemplate="{StaticResource midiItemTemplate}"
                              ItemContainerStyle="{StaticResource TextComboBoxItemStyle}"
                              SelectedItem="{Binding SelectedMidiDevice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ItemsSource="{Binding MidiDevices}"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Margin="0,1,0,10"
                              MinWidth="250"/>


                    <WrapPanel Grid.Row="2"
                               Grid.ColumnSpan="3">
                        <TextBlock Text="Music Volume:"
                                   Grid.Row="2"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Margin="0,0,5,10"/>
                        <Slider x:Name="sliderVolume"
                                Value="{Binding MusicVolumeValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue='50'}"
                                Minimum="0"
                                Maximum="100"
                                Grid.Row="2"
                                Grid.Column="1"
                                MinWidth="105"
                                Margin="0,0,10,7"/>

                        <TextBlock Text="SFX Volume:"
                                   Grid.Row="2"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Margin="10,0,5,10"/>
                        <Slider x:Name="sliderSfxVolume"
                                Value="{Binding SfxVolumeValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue='50'}"
                                Minimum="0"
                                Maximum="100"
                                Grid.Row="2"
                                Grid.Column="1"
                                MinWidth="105"
                                Margin="0,0,10,7"/>

                    </WrapPanel>
                </Grid>

                <WrapPanel Margin="3,3,3,0" HorizontalAlignment="Left">
                    <CheckBox Height="25" Content="Logarithmic Volume Control" 
                              Margin="0,3,10,3"
                              IsChecked="{Binding IsLogVolumeChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              MouseEnter="Control_MouseEnter"
                              ToolTip="Uncheck this option if you feel that the volume does not change smoothly."/> 
                    <CheckBox Height="25" Content="Reverse Speakers" 
                              Margin="4,3,10,3"
                              IsChecked="{Binding IsReverseSpeakersChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              MouseEnter="Control_MouseEnter"
                              ToolTip="Swaps left and right channels when checked."/>
                </WrapPanel>
            </StackPanel>
        </GroupBox>

        <GroupBox x:Name="grpVideo"
                  Grid.Row="1"
                  Grid.Column="1"
                  Header=" Graphics Driver Options " Margin="10,10,10,0" 
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Top">
            <StackPanel>

                <Grid Margin="3">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Renderer:"
                               Grid.Row="1"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Center"
                               Margin="0,0,5,5"/>
                    <ComboBox x:Name="cboRenderers"
                              Grid.Row="1"
                              Grid.Column="1"
                              Style="{StaticResource MainComboBoxStyle}"
                              ItemTemplate="{StaticResource rendererItemTemplate}"
                              ItemContainerStyle="{StaticResource TextComboBoxItemStyle}"
                              SelectedItem="{Binding SelectedRenderer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ItemsSource="{Binding AvailableRenderers}"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Margin="0,1,0,5"
                              MinWidth="345"/>
                </Grid>

                <WrapPanel HorizontalAlignment="Stretch" Margin="4,3,10,6"
                           MouseEnter="Control_MouseEnter"
                           ToolTip="Only applies when set to 'Direct3D Hardware Acceleration'"
                           ToolTipService.IsEnabled="False">
                    <RadioButton Content="Quarter Screen" VerticalAlignment="Center" Margin="0,0,10,0"
                                 GroupName="ScreenMode"
                                 Visibility="{Binding ScreenModesVisibility}"
                                 IsChecked="{Binding IsQuarterScreenChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <RadioButton Content="Full Screen" VerticalAlignment="Center" Margin="0,0,40,0"
                                 GroupName="ScreenMode"
                                 Visibility="{Binding ScreenModesVisibility}"
                                 IsChecked="{Binding IsFullScreenChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    
                    <RadioButton Content="RIVA 128" VerticalAlignment="Center" Margin="0,0,10,0"
                                 GroupName="GraphicsOption"
                                 Visibility="{Binding RivaOptionsVisibility}"
                                 IsChecked="{Binding IsRivaOptionChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <RadioButton Content="TNT" VerticalAlignment="Center" Margin="0,0,10,0"
                                 GroupName="GraphicsOption"
                                 Visibility="{Binding RivaOptionsVisibility}"
                                 IsChecked="{Binding IsTntOptionChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    

                </WrapPanel>
            </StackPanel>
        </GroupBox>

        <GroupBox Grid.Row="2" 
                  Grid.Column="1" 
                  Height="{Binding ElementName=grpShell, Path=ActualHeight}"
                  Header=" Programs to Run Prior to FF7: " 
                  Margin="10,10,10,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <StackPanel Margin="3,3,0,3">
                    <Button x:Name="btnAddProgram"
                            Click="btnAddProgram_Click"
                            ToolTip="Add Program to run"
                            Style="{StaticResource ImageButton}"
                            VerticalAlignment="Top"
                            Height="28"
                            Width="28"
                            Margin="0,0,0,0"
                            Content="{StaticResource iconAdd}"/>

                    <Button x:Name="btnRemoveProgram"
                            Click="btnRemoveProgram_Click"
                            ToolTip="Remove Program"
                            Style="{StaticResource ImageButton}"
                            VerticalAlignment="Top"
                            Height="28"
                            Width="28"
                            Margin="0,0,0,0"
                            Content="{StaticResource iconMinus}"/>

                    <Button x:Name="btnEditProgram"
                            ToolTip="Edit Program and Arguments"
                            Click="btnEditProgram_Click"
                            Style="{StaticResource ImageButton}"
                            VerticalAlignment="Top"
                            Height="28"
                            Width="28"
                            Content="{StaticResource iconEdit}"/>

                </StackPanel>


                <ListBox x:Name="lstPrograms" Grid.Column="1"
                          ItemsSource="{Binding ProgramList}" 
                          VirtualizingPanel.IsVirtualizing="false"
                          ItemContainerStyle="{StaticResource programItemStyle}"
                          Margin="3">

                </ListBox>
            </Grid>
        </GroupBox>

        <TextBlock Grid.Row="3"
                   Grid.ColumnSpan="2"
                   VerticalAlignment="Center"
                   TextWrapping="Wrap"
                   Margin="10,0,190,0"
                   TextTrimming="CharacterEllipsis"
                   Text="{Binding StatusMessage, FallbackValue='This is a mouse over description or message to user.'}"/>

        <Button x:Name="btnOk" 
                Content="Save" 
                Width="80"
                Click="btnOk_Click"
                Grid.Row="3" Grid.Column="1"
                Margin="0,5,90,10"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"/>

        <Button x:Name="btnCancel" 
                Content="Cancel"
                Width="80"
                Click="btnCancel_Click"
                Grid.Row="3" Grid.Column="1"
                Margin="0,5,10,10"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"/>


        <Popup x:Name="popupProgram"
               IsOpen="{Binding IsProgramPopupOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
               StaysOpen="True"
               Placement="Right"
               HorizontalOffset="3"
               PlacementTarget="{Binding ElementName=btnAddProgram}">
            <Grid Width="{Binding ElementName=lstPrograms, Path=ActualWidth}" Height="90" 
                  Background="{DynamicResource PrimaryControlBackground}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <TextBox Text="{Binding NewProgramPathText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                         FontSize="14"
                         VerticalContentAlignment="Center"
                         Margin="25,3,5,0"/>

                <TextBlock Text="Enter full path to program to run"
                           Foreground="{DynamicResource PrimaryControlDisabledForeground}"
                           IsHitTestVisible="False"
                           FontSize="14"
                           Margin="30,3,5,0">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding NewProgramPathText, FallbackValue=''}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <Button x:Name="btnBrowseProgram"
                        Click="btnBrowseProgram_Click"
                        Style="{StaticResource FileEllipsisImageButton}"
                        ToolTip="Browse for program to run"
                        Grid.Column="1"
                        Margin="0,3,25,0"
                        VerticalAlignment="Center"/>


                <TextBox x:Name="txtProgramPath"
                         Text="{Binding NewProgramArgsText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Grid.Row="1"
                         FontSize="14"
                         VerticalContentAlignment="Center"
                         Margin="25,3,5,0"/>

                <TextBlock x:Name="txtProgramArgs"
                           Text="Enter program arguments"
                           Grid.Row="1"
                           Foreground="{DynamicResource PrimaryControlDisabledForeground}"
                           IsHitTestVisible="False"
                           FontSize="14"
                           Margin="30,3,5,0">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding NewProgramArgsText, FallbackValue=''}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <Button x:Name="btnSaveProgram"
                        Click="btnSaveProgram_Click"
                        Grid.Row="2"
                        HorizontalAlignment="Center"
                        Width="80"
                        Margin="0,3,90,3"
                        Content="Save"/>

                <Button x:Name="btnCancelProgramAction"
                        Click="btnCancelProgramAction_Click"
                        Grid.Row="2"
                        HorizontalAlignment="Center"
                        Width="80"
                        Margin="90,3,0,3"
                        Content="Cancel"/>

            </Grid>
        </Popup>
    </Grid>
</Window>
