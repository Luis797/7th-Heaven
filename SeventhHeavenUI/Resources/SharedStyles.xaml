<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cls="clr-namespace:SeventhHeaven.Classes">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Icons/IconResourceDictionary.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <!-- COLORS - Dark Theme -->
    <Color x:Key="DarkBackgroundColor">#1f1f1f</Color>
    <Color x:Key="MedDarkBackgroundColor" R="56" G="56" B="56" A="255"/>


    <Color x:Key="DarkControlBackground">#1f1f1f</Color>
    <Color x:Key="DarkControlForeground">#ffffff</Color>
    <Color x:Key="DarkControlPressed">#CF2D2A</Color>
    <Color x:Key="DarkControlMouseOver">#5e5e5e</Color>

    <Color x:Key="DarkControlDisabledBackground" R="31" G="31" B="31" A="255"/>
    <Color x:Key="DarkControlDisabledForeground" R="121" G="121" B="121" A="255"/>


    <!-- COLORS - Light Theme -->
    <Color x:Key="LightBackgroundColor">#CFD8DC</Color>
    <Color x:Key="MedLightBackgroundColor">#ECEFF1</Color>

    <Color x:Key="LightControlBackground">#CFD8DC</Color>
    <Color x:Key="LightControlForeground">#212121</Color>
    <Color x:Key="LightControlPressed">#59B3E7</Color>
    <Color x:Key="LightControlMouseOver">#B0BEC5</Color>

    <Color x:Key="LightControlDisabledBackground" R="31" G="31" B="31" A="255"/>
    <Color x:Key="LightControlDisabledForeground" R="121" G="121" B="121" A="255"/>

    
    <!-- COLORS - Classic 7H Theme -->
    <Color x:Key="ClassicBackgroundColor">#FFF0F0F0</Color>
    <Color x:Key="ClassicSecondaryBackgroundColor">#FFFFFFFF</Color>

    <Color x:Key="ClassicControlBackground">#FFC0C0FF</Color>
    <Color x:Key="ClassicControlForeground">#FF000000</Color>
    <Color x:Key="ClassicControlPressed">#FF90EE90</Color>
    <Color x:Key="ClassicControlMouseOver">#FFACACE5</Color>

    <Color x:Key="ClassicControlDisabledBackground">#FF696969</Color>
    <Color x:Key="ClassicControlDisabledForeground">#FFCADCD3</Color>



    <!-- APP BRUSHES - These are used in all the below styles to have a consistent color theme across all controls. The color of these brushes can be changed in the "Color Theme" settings of the app -->
    <SolidColorBrush x:Key="PrimaryAppBackground" Color="{DynamicResource DarkBackgroundColor}"/>
    <SolidColorBrush x:Key="SecondaryAppBackground" Color="{DynamicResource MedDarkBackgroundColor}"/>
    
    <SolidColorBrush x:Key="PrimaryControlBackground" Color="{DynamicResource DarkControlBackground}"/>
    <SolidColorBrush x:Key="PrimaryControlForeground" Color="{DynamicResource DarkControlForeground}"/>
    <SolidColorBrush x:Key="PrimaryControlPressed" Color="{DynamicResource DarkControlPressed}"/>
    <SolidColorBrush x:Key="PrimaryControlMouseOver" Color="{DynamicResource DarkControlMouseOver}"/>
    <SolidColorBrush x:Key="PrimaryControlDisabledBackground" Color="{DynamicResource DarkControlDisabledBackground}"/>
    <SolidColorBrush x:Key="PrimaryControlDisabledForeground" Color="{DynamicResource DarkControlDisabledForeground}"/>


    <Style x:Key="MainWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{DynamicResource PrimaryAppBackground}"/>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryControlBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryControlForeground}"/>
        <Setter Property="Padding" Value="10,8,10,8"/>
        <Setter Property="FontSize" Value="14"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border x:Name="bd" BorderThickness="0" Background="{TemplateBinding Background}">
                        <TextBlock x:Name="txtContent"
                                   Text="{TemplateBinding Content}"
                                   TextAlignment="Center"
                                   Foreground="{TemplateBinding Foreground}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Padding="{TemplateBinding Padding}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="bd" Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlMouseOver}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlPressed}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryControlDisabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainButtonStyleWithNoTriggers" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryControlBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryControlForeground}"/>
        <Setter Property="Padding" Value="10,8,10,8"/>
        <Setter Property="FontSize" Value="14"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="bd" BorderThickness="0" Background="{TemplateBinding Background}">
                        <TextBlock x:Name="txtContent"
                                   Text="{TemplateBinding Content}"
                                   TextAlignment="Center"
                                   Foreground="{TemplateBinding Foreground}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Padding="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainButtonWithImageStyle" TargetType="{x:Type cls:ButtonWithImage}">
        <Setter Property="Background" Value="{DynamicResource PrimaryControlBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryControlForeground}"/>
        <Setter Property="Padding" Value="0,8,3,8"/>
        <Setter Property="FontSize" Value="14"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cls:ButtonWithImage}">

                    
                    <Border x:Name="bd" BorderThickness="0" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="5"/>
                            </Grid.ColumnDefinitions>

                            <Viewbox Width="28" Height="28" Stretch="UniformToFill">
                                <ContentControl Template="{TemplateBinding TemplateSource}" Foreground="Green"/>
                            </Viewbox>
                            <TextBlock x:Name="txtContent"
                                       Grid.Column="1"
                                       Text="{TemplateBinding Content}"
                                       TextAlignment="Center"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}"
                                       Padding="{TemplateBinding Padding}"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="bd" Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlMouseOver}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlPressed}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="txtContent" Property="Foreground" Value="{DynamicResource PrimaryControlDisabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type cls:ButtonWithImage}" BasedOn="{StaticResource MainButtonWithImageStyle}"/>

    <Style x:Key="ButtonWithImageAndDownArrow" TargetType="{x:Type cls:ButtonWithImage}">
        <Setter Property="Background" Value="{DynamicResource PrimaryControlBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryControlForeground}"/>
        <Setter Property="Padding" Value="0,8,5,8"/>
        <Setter Property="FontSize" Value="14"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cls:ButtonWithImage}">

                    <Border x:Name="bd" BorderThickness="0" Background="{TemplateBinding Background}">
                        <WrapPanel>
                            <Viewbox Width="28" Height="28" Stretch="UniformToFill">
                                <ContentControl Template="{TemplateBinding TemplateSource}" Foreground="Green"/>
                            </Viewbox>
                            
                            <TextBlock x:Name="txtContent"
                                       Text="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}"
                                       Padding="{TemplateBinding Padding}"/>

                            <Path Fill="{DynamicResource PrimaryControlForeground}" 
                                  Data="M 0 0 L 6 6 L 12 0 Z"
                                  Margin="0,0,5,0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                        </WrapPanel>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="bd" Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlMouseOver}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>



    <Style x:Key="HyperlinkButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryControlBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryControlPressed}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="FontSize" Value="14"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border x:Name="bd" BorderThickness="0" Background="{TemplateBinding Background}">
                        <TextBlock x:Name="txtContent"
                                   Text="{TemplateBinding Content}"
                                   TextAlignment="Center"
                                   TextDecorations="Underline"
                                   Margin="{TemplateBinding Margin}"
                                   Foreground="{TemplateBinding Foreground}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Padding="{TemplateBinding Padding}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="bd" Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlMouseOver}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlPressed}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryControlForeground}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryControlForeground}"/>
                            <Setter TargetName="txtContent" Property="TextDecorations" Value="None"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonWithDownArrow" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryControlBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryControlForeground}"/>
        <Setter Property="Padding" Value="10,8,5,8"/>
        <Setter Property="FontSize" Value="14"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border x:Name="bd" BorderThickness="0" Background="{TemplateBinding Background}">
                        <WrapPanel>
                            <TextBlock x:Name="txtContent"
                                       Text="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}"
                                       Padding="{TemplateBinding Padding}"/>
                            
                            <Path Fill="{DynamicResource PrimaryControlForeground}" 
                                  Data="M 0 0 L 6 6 L 12 0 Z"
                                  Margin="0,0,5,0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                        </WrapPanel>
                        
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="bd" Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlMouseOver}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>

    <Style x:Key="DownArrowToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource PrimaryControlBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryControlForeground}"/>
        <Setter Property="Padding" Value="5,2,5,2"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="bd" Padding="{TemplateBinding Padding}" BorderThickness="0" Background="{TemplateBinding Background}">
                        <Path Fill="{DynamicResource PrimaryControlForeground}" 
                                  Data="M 0 0 L 6 6 L 12 0 Z"
                                  Margin="0,0,0,0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="bd" Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlMouseOver}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryControlBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryControlForeground}"/>
        <Setter Property="Width" Value="48"/>
        <Setter Property="Height" Value="48"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Viewbox Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Stretch="UniformToFill">
                        <Border x:Name="bd" BorderThickness="0" Background="{TemplateBinding Background}">
                            <ContentControl Template="{TemplateBinding Content}" VerticalContentAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </Viewbox>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="bd" Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlMouseOver}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryControlForeground}"/>
        <Setter Property="FontSize" Value="15"/>
    </Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryAppBackground}"/>
    </Style>
    
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{StaticResource PrimaryControlForeground}" />
        <Setter Property="FontSize" Value="14"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="bd"
                                Margin="0,0,0,0" 
                                Padding="3,0,3,0"
                                Background="{DynamicResource PrimaryControlBackground}"
                                BorderBrush="{DynamicResource SecondaryAppBackground}" 
                                BorderThickness="1,1,1,1" 
                                CornerRadius="1,1,0,0" >
                            <ContentPresenter x:Name="ContentSite"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              ContentSource="Header"
                                              Margin="12,2,12,2"
                                              RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlPressed}" />
                            <Setter TargetName="bd" Property="BorderThickness" Value="1,1,1,0" />
                        </Trigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlMouseOver}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlDisabledBackground}" />
                            <Setter TargetName="bd" Property="BorderBrush" Value="{DynamicResource PrimaryControlDisabledForeground}" />
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryControlDisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainStatusBarStyle" TargetType="{x:Type StatusBarItem}">
        <Setter Property="Background" Value="{DynamicResource SecondaryAppBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryControlForeground}"/>
    </Style>

    <Style TargetType="{x:Type StatusBarItem}" BasedOn="{StaticResource MainStatusBarStyle}"/>

    <Style TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{DynamicResource SecondaryAppBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryControlForeground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryControlMouseOver}"/>
    </Style>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{DynamicResource SecondaryAppBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryControlForeground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryAppBackground}"/>
    </Style>


    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Background" Value="{DynamicResource SecondaryAppBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryControlMouseOver}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryControlForeground}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <Border x:Name="bd" BorderThickness="1,0,1,1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                            <TextBlock Text="{TemplateBinding Content}"
                                       Padding="0,0,0,3"
                                       HorizontalAlignment="Center"/>
                        </Border>
                        
                        <Thumb x:Name="PART_HeaderGripper" Width="2" HorizontalAlignment="Right"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="bd" Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryControlMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryControlPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimaryTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource SecondaryAppBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryControlMouseOver}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryControlForeground}"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource PrimaryTextBoxStyle}"/>


    <Style x:Key="PrimaryTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryControlForeground}"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource PrimaryTextBlockStyle}"/>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryControlForeground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" Background="{DynamicResource PrimaryControlBackground}" BorderBrush="{DynamicResource PrimaryControlDisabledForeground}" BorderThickness="1">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryControlForeground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Grid>
                        <Border x:Name="bd" Background="{DynamicResource PrimaryControlBackground}" Padding="5" BorderThickness="0">
                            <TextBlock x:Name="cnt" Text="{TemplateBinding Header}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" Margin="3,0,0,0"/>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryControlDisabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- This style is used to make a MenuItem look like a Seperator in a Context Menu (the MenuItem is not clickable)-->
    <Style x:Key="ContextMenuSeperator" TargetType="{x:Type MenuItem}">
        <Setter Property="IsEnabled" Value="False"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Rectangle HorizontalAlignment="Stretch" Fill="{DynamicResource PrimaryControlDisabledForeground}" Height="1" Focusable="False" IsEnabled="False" IsHitTestVisible="False"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="MainListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryControlPressed}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="{DynamicResource PrimaryControlForeground}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryControlMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryControlPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="{DynamicResource PrimaryControlForeground}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SecondaryAppBackground}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryControlPressed}"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryControlMouseOver}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <!--<Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" 
                                    Width="18" Height="18"
                                    CornerRadius="0"
                                    BorderThickness="1"
                                    BorderBrush="{DynamicResource PrimaryControlForeground}"
                                    Background="{DynamicResource PrimaryControlBackground}">
                                <Grid>
                                    <Path Visibility="Collapsed" 
                                          Width="7" Height="7"
                                          x:Name="CheckMark"
                                          SnapsToDevicePixels="False"
                                          StrokeThickness="2"
                                          Data="M 0 0 L 7 7 M 0 7 L 7 0">
                                        <Path.Stroke>
                                            <SolidColorBrush Color="{DynamicResource DarkControlPressed}" />
                                        </Path.Stroke>
                                    </Path>
                                    <Path Visibility="Collapsed" 
                                          Width="7" Height="7"
                                          x:Name="InderminateMark"
                                          SnapsToDevicePixels="False"
                                          StrokeThickness="2"
                                          Data="M 0 7 L 7 0">
                                        <Path.Stroke>
                                            <SolidColorBrush Color="{DynamicResource DarkControlPressed}" />
                                        </Path.Stroke>
                                    </Path>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>

                        <ContentPresenter Margin="4,0,0,0"
                                          VerticalAlignment="Center" HorizontalAlignment="Left"
                                          TextElement.Foreground="{TemplateBinding Foreground}"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryControlMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryControlDisabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Foreground" Value="{DynamicResource PrimaryControlForeground}"/>
    </Style>

    <!--COMBO BOX STYLE. TEMPLATE TAKEN FROM: https://docs.microsoft.com/en-us/dotnet/framework/wpf/controls/combobox-styles-and-templates -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border"
                    Grid.ColumnSpan="2"
                    BorderBrush="{DynamicResource SecondaryAppBackground}"
                    BorderThickness="1"/>

            <Border x:Name="bd" Grid.Column="0" Margin="1" BorderThickness="0" Background="{TemplateBinding Background}"/>

            <Path x:Name="Arrow"
                  Grid.Column="1"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Fill="{DynamicResource PrimaryControlForeground}"
                  Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>

        <ControlTemplate.Triggers>
            <!--<Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0"/>
            </Trigger>-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryControlMouseOver}"/>
                <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlMouseOver}"/>

            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryControlPressed}"/>
                <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlPressed}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="MainComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Background" Value="{DynamicResource PrimaryControlBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentSite">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ToggleButton x:Name="ToggleButton"
                                      Template="{StaticResource ComboBoxToggleButton}"
                                      Background="{TemplateBinding Background}"
                                      Grid.Column="2"
                                      Focusable="false"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                        <ContentPresenter x:Name="ContentSite"
                                          IsHitTestVisible="False"
                                          ContentTemplate="{TemplateBinding ItemTemplate}"
                                          DataContext="{TemplateBinding DataContext}"
                                          TextElement.Foreground="{DynamicResource PrimaryControlForeground}"
                                          Margin="5"
                                          VerticalAlignment="Stretch"
                                          HorizontalAlignment="Stretch"/>


                        <Popup x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" BorderThickness="1,0,1,1" Background="{DynamicResource PrimaryControlBackground}" BorderBrush="{DynamicResource SecondaryAppBackground}">
                                </Border>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder"
                                        Property="MinHeight"
                                        Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup"
                                     Property="AllowsTransparency"
                                     Value="true">
                            <Setter TargetName="DropDownBorder"
                                        Property="Margin"
                                        Value="0,0,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="MainComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="bd" BorderBrush="{DynamicResource SecondaryAppBackground}" BorderThickness="0" Background="{DynamicResource PrimaryControlBackground}">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" 
                                          Content="{TemplateBinding Content}" 
                                          DataContext="{TemplateBinding DataContext}" 
                                          TextElement.Foreground="{DynamicResource PrimaryControlForeground}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlPressed}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlMouseOver}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="bd" BorderBrush="{DynamicResource SecondaryAppBackground}" BorderThickness="0" Background="{DynamicResource PrimaryControlBackground}">
                        <TextBlock  Text="{Binding }" 
                                    Foreground="{DynamicResource PrimaryControlForeground}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlPressed}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{DynamicResource PrimaryControlMouseOver}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="{DynamicResource PrimaryControlBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryAppBackground}"/>
    </Style>

    <Style x:Key="MainProgressBarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryControlPressed}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryControlBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryAppBackground}"/>
    </Style>

    <Style TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource MainProgressBarStyle}"/>

    <!-- Checkbox stylized to look like Windows 10 toggle switch; reference: https://github.com/TacticApps/C-WPf-Toggle-Switch-UI-Control/blob/master/ToggleSwitch/ToggleSwitch/ToggleButton.xaml--> 
    <Style x:Key="ToggleSwitchCheckbox" TargetType="{x:Type CheckBox}">
        <Setter Property="Height" Value="28"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Viewbox Margin="0,2,2,1" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" IsHitTestVisible="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="55"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock x:Name="contentText"
                                       HorizontalAlignment="Left"
                                       Style="{StaticResource PrimaryTextBlockStyle}"
                                       Text="{TemplateBinding Content}"
                                       FontSize="28"
                                       Margin="0,0,15,10"
                                       VerticalAlignment="Center"/>

                            <Grid x:Name="grid" Grid.Column="1" HorizontalAlignment="Left" Height="60" Margin="0" VerticalAlignment="Top" Width="100">
                                <Rectangle x:Name="Back" 
                                           Fill="{DynamicResource PrimaryControlBackground}" 
                                           Stroke="{DynamicResource PrimaryControlForeground}"
                                           StrokeThickness="3"
                                           HorizontalAlignment="Left" Height="50" VerticalAlignment="Top" Width="96" Margin="2,2,0,0" RadiusY="24" RadiusX="24"/>

                                <Ellipse x:Name="Dot" 
                                         Fill="White" 
                                         HorizontalAlignment="Center" 
                                         Height="38" 
                                         Width="38"
                                         VerticalAlignment="Center">
                                </Ellipse>

                                <Rectangle x:Name="Overlay" Fill="{DynamicResource PrimaryControlBackground}" Opacity="0" HorizontalAlignment="Left" Height="52" VerticalAlignment="Top" Width="98" Margin="1,1,0,0" RadiusY="29" RadiusX="29"/>
                            </Grid>

                            <TextBlock x:Name="toggleText"
                                       Grid.Column="2"
                                       Style="{StaticResource PrimaryTextBlockStyle}"
                                       Text="Off"
                                       FontSize="28"
                                       Margin="10,0,0,10"
                                       VerticalAlignment="Center"/>
                        </Grid>
                    </Viewbox>




                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Dot" Property="Margin" Value="-44,0,0,5"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Dot" Property="Margin" Value="0,0,-44,5"/>
                            <Setter TargetName="toggleText" Property="Text" Value="On"/>
                            <Setter TargetName="Back" Property="Fill" Value="{DynamicResource PrimaryControlPressed}"/>
                        </Trigger>
                        
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Back" Property="Fill" Value="{DynamicResource PrimaryControlMouseOver}"/>
                        </Trigger>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Overlay" Property="Opacity" Value="0.25"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Overlay" Property="Opacity" Value="0.5"/>
                            <Setter TargetName="Back" Property="Stroke" Value="{DynamicResource PrimaryControlDisabledForeground}"/>
                            <Setter TargetName="Back" Property="Fill" Value="{DynamicResource PrimaryControlDisabledBackground}"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="moveLeft">
                                    <Storyboard SpeedRatio="15">
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="Dot" Storyboard.TargetProperty="Margin" BeginTime="00:00:00">
                                            <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0,0,-44,5" />
                                            <SplineThicknessKeyFrame KeyTime="00:00:01" Value="-44,0,0,5" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="moveLeft"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="moveRight">
                                    <Storyboard SpeedRatio="15">
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="Dot" Storyboard.TargetProperty="Margin" BeginTime="00:00:00">
                                            <SplineThicknessKeyFrame KeyTime="00:00:00" Value="-44,0,0,5" />
                                            <SplineThicknessKeyFrame KeyTime="00:00:01" Value="0,0,-44,5" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="moveRight"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="18" Height="18">
                                <Ellipse x:Name="Border" StrokeThickness="1" Stroke="{DynamicResource PrimaryControlForeground}" Fill="{DynamicResource PrimaryControlBackground}"/>
                                <Ellipse x:Name="CheckMark" Margin="4" Visibility="Collapsed" Fill="{DynamicResource PrimaryControlPressed}"/>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="5,0,0,0"
                                          TextElement.Foreground="{DynamicResource PrimaryControlForeground}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Fill" Value="{DynamicResource PrimaryControlMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Fill" Value="{DynamicResource PrimaryControlDisabledBackground}"/>
                            <Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource PrimaryControlDisabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    
    <!--Slider Style-->
    <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height" Value="14" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryControlForeground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Ellipse x:Name="Ellipse" StrokeThickness="1" Fill="{TemplateBinding Foreground}"/>
                        <Ellipse x:Name="overlay" StrokeThickness="1" Fill="Black" Opacity="0"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="overlay" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Template when the orientation of the Slider is Horizontal.-->
    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto"
                     MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TickBar x:Name="TopTick"
                     SnapsToDevicePixels="True"
                     Placement="Top"
                     Height="4"
                     Visibility="Collapsed"
                     Fill="{DynamicResource PrimaryControlForeground}"/>

            <Border x:Name="TrackBackground"
                    Margin="0"
                    CornerRadius="2"
                    Height="4"
                    Grid.Row="1"
                    BorderThickness="1"
                    BorderBrush="{DynamicResource SecondaryAppBackground}"
                    Background="{DynamicResource PrimaryControlBackground}"/>

            <Track Grid.Row="1" x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="track_thumb" Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar x:Name="BottomTick"
                     SnapsToDevicePixels="True"
                     Grid.Row="2"
                     Fill="{TemplateBinding Foreground}"
                     Placement="Bottom"
                     Height="4"
                     Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>